akka {

  #log-config-on-start = on

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    debug {
      lifecycle = on
    }
  }

  remote {
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }

    use-dispatcher = cluster-dispatcher
  
  }

  cluster {

    seed-nodes = [ ]

    roles = [ "mem" ]

    use-dispatcher = cluster-dispatcher

  }
 
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
}

my-dispatcher {
  type = "Dispatcher"
  executor = "thread-pool-executor"
  thread-pool-executor {
    # minimum number of threads to cap factor-based core number to
    core-pool-size-min = 2
    # No of core threads ... ceil(available processors * factor)
    core-pool-size-factor = 2.0
    # maximum number of threads to cap factor-based number to
    core-pool-size-max = 10
  }
  throughput = 1
}

cluster-dispatcher {
  type = "Dispatcher"
  executor = "thread-pool-executor"
  thread-pool-executor {
    # minimum number of threads to cap factor-based core number to
    core-pool-size-min = 2
    # No of core threads ... ceil(available processors * factor)
    core-pool-size-factor = 2.0
    # maximum number of threads to cap factor-based number to
    core-pool-size-max = 10
  }
  throughput = 1
}


stresstest.join-after = 10

#stresstest.cpu.max-time = 6000000 // ten minutes
#stresstest.cpu.step = 30000 // 30 seconds
#stresstest.cpu.factor = 15 // number of cpu tests to run at once

stresstest.cpu.max-time = 20000 // ten minutes
stresstest.cpu.step = 500 // 30 seconds
stresstest.cpu.factor = 1 // number of cpu tests to run at once

stresstest.mem.max-load = 2147483646
stresstest.mem.step = 5242880

include "deploy"
